digraph "PermutationMatrix&lt; SizeAtCompileTime, MaxSizeAtCompileTime, IndexType &gt;"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{PermutationMatrix\<\l SizeAtCompileTime,\l MaxSizeAtCompileTime,\l IndexType \>\n|# m_indices\l|+ indices()\l+ indices()\l+ operator=()\l+ operator=()\l+ PermutationMatrix()\l+ PermutationMatrix()\l+ PermutationMatrix()\l+ PermutationMatrix()\l+ PermutationMatrix()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{PermutationBase\< Permutation\lMatrix\< SizeAtCompileTime,\l MaxSizeAtCompileTime, IndexType \> \>\n||+ applyTranspositionOnTheLeft()\l+ applyTranspositionOnTheRight()\l+ cols()\l+ indices()\l+ indices()\l+ inverse()\l+ operator*()\l+ operator*()\l+ operator=()\l+ operator=()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PermutationBase.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{EigenBase\< PermutationMatrix\l\< SizeAtCompileTime, MaxSizeAtCompile\lTime, IndexType \> \>\n||+ addTo()\l+ applyThisOnTheLeft()\l+ applyThisOnTheRight()\l+ cols()\l+ const_cast_derived()\l+ const_derived()\l+ derived()\l+ derived()\l+ evalTo()\l+ rows()\l+ size()\l+ subTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structEigen_1_1EigenBase.html"];
}
