digraph "HouseholderSequence&lt; VectorsType, CoeffsType, Side &gt;"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{HouseholderSequence\l\< VectorsType, CoeffsType,\l Side \>\n|# m_coeffs\l# m_length\l# m_shift\l# m_trans\l# m_vectors\l|+ adjoint()\l+ applyThisOnTheLeft()\l+ applyThisOnTheLeft()\l+ applyThisOnTheRight()\l+ applyThisOnTheRight()\l+ cols()\l+ conjugate()\l+ essentialVector()\l+ evalTo()\l+ evalTo()\land 10 more...\l# setTrans()\l# trans()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{EigenBase\< HouseholderSequence\l\< VectorsType, CoeffsType,\l Side \> \>\n||+ addTo()\l+ applyThisOnTheLeft()\l+ applyThisOnTheRight()\l+ cols()\l+ const_cast_derived()\l+ const_derived()\l+ derived()\l+ derived()\l+ evalTo()\l+ rows()\l+ size()\l+ subTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structEigen_1_1EigenBase.html"];
}
