digraph "DenseBase&lt; Derived &gt;"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{DenseBase\< Derived \>\n||+ all()\l+ allFinite()\l+ any()\l+ block()\l+ block()\l+ block()\l+ block()\l+ block()\l+ block()\l+ bottomLeftCorner()\land 136 more...\l+ Constant()\l+ Constant()\l+ Constant()\l+ LinSpaced()\l+ LinSpaced()\l+ LinSpaced()\l+ LinSpaced()\l+ NullaryExpr()\l+ NullaryExpr()\l+ NullaryExpr()\land 9 more...\l# checkTransposeAliasing()\l# DenseBase()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{ArrayBase\< Array\< \l_Scalar, _Rows, _Cols,\l _Options, _MaxRows, \l_MaxCols \> \>\n||+ abs()\l+ abs2()\l+ acos()\l+ array()\l+ array()\l+ asin()\l+ binaryExpr()\l+ cast()\l+ conjugate()\l+ cos()\land 60 more...\l# ArrayBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1ArrayBase.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{ArrayBase\< ArrayWrapper\l\< ExpressionType \> \>\n||+ abs()\l+ abs2()\l+ acos()\l+ array()\l+ array()\l+ asin()\l+ binaryExpr()\l+ cast()\l+ conjugate()\l+ cos()\land 60 more...\l# ArrayBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1ArrayBase.html"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node4 [label="{ArrayWrapper\< Expression\lType \>\n|# m_expression\l|+ ArrayWrapper()\l+ coeff()\l+ coeff()\l+ coeffRef()\l+ coeffRef()\l+ coeffRef()\l+ coeffRef()\l+ cols()\l+ data()\l+ data()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1ArrayWrapper.html",tooltip="Expression of a mathematical vector or matrix as an array object. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node5 [label="{ArrayBase\< Derived \>\n||+ abs()\l+ abs2()\l+ acos()\l+ array()\l+ array()\l+ asin()\l+ binaryExpr()\l+ cast()\l+ conjugate()\l+ cos()\land 60 more...\l# ArrayBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1ArrayBase.html",tooltip="Base class for all 1D and 2D array, and related expressions. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node6 [label="{MatrixBase\< Derived \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 120 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html",tooltip="Base class for all dense matrices, vectors, and expressions. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node7 [label="{MatrixBase\< CoeffBasedProduct\l\< LhsNested, RhsNested, NestingFlags \> \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 113 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node8 [label="{MatrixBase\< DiagonalProduct\l\< MatrixType, DiagonalType,\l ProductOrder \> \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 113 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node9 [label="{MatrixBase\< Flagged\l\< ExpressionType, Added,\l Removed \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node10 [label="{MatrixBase\< Homogeneous\l\< MatrixType, _Direction \> \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 113 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node11 [label="{Homogeneous\< MatrixType,\l Direction \>\n|# m_matrix\l|+ coeff()\l+ cols()\l+ Homogeneous()\l+ operator*()\l+ rows()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1Homogeneous.html",tooltip="Expression of one (or a set of) homogeneous vector(s) "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node12 [label="{MatrixBase\< Matrix\l\< _Scalar, _Rows, _Cols,\l _Options, _MaxRows, _MaxCols \> \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 113 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node13 [label="{MatrixBase\< MatrixWrapper\l\< ExpressionType \> \>\n||+ adjoint()\l+ adjointInPlace()\l+ applyHouseholderOnTheLeft()\l+ applyHouseholderOnTheRight()\l+ applyOnTheLeft()\l+ applyOnTheLeft()\l+ applyOnTheRight()\l+ applyOnTheRight()\l+ array()\l+ array()\land 113 more...\l+ Identity()\l+ Identity()\l+ Unit()\l+ Unit()\l+ UnitW()\l+ UnitX()\l+ UnitY()\l+ UnitZ()\l# MatrixBase()\l# operator+=()\l# operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixBase.html"];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node14 [label="{MatrixWrapper\< Expression\lType \>\n|# m_expression\l|+ coeff()\l+ coeff()\l+ coeffRef()\l+ coeffRef()\l+ coeffRef()\l+ coeffRef()\l+ cols()\l+ data()\l+ data()\l+ innerStride()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1MatrixWrapper.html",tooltip="Expression of an array as a mathematical vector or matrix. "];
}
